{
  "swagger": "2.0",
  "info": {
    "title": "MyApp API",
    "description": "API documentation for MyApp",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/login": {
      "get": {
        "description": "New endpoint",
        "responses": {
          "200": {
            "description": "New response"
          }
        }
      },
      "post": {
        "summary": "Login",
        "description": "User login",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh Token",
        "description": "Refresh access token",
        "responses": {
          "200": {
            "description": "Token refreshed",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "summary": "Logout",
        "description": "Logout user",
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/auth/logout2": {
      "delete": {
        "summary": "Logout Refresh Token",
        "description": "Logout user and revoke refresh token",
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/ships": {
      "get": {
        "summary": "Get all ships",
        "description": "Retrieve a list of all ships",
        "responses": {
          "200": {
            "description": "List of ships",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ship"
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/ships/{id}": {
      "get": {
        "summary": "Get ship by ID",
        "description": "Retrieve a ship by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ship details",
            "schema": {
              "$ref": "#/definitions/Ship"
            }
          },
          "404": {
            "description": "Ship not found"
          }
        }
      }
    },
    "/ships/crear": {
      "post": {
        "summary": "Create a new ship",
        "description": "Create a new ship with the provided data",
        "parameters": [
          {
            "name": "ship",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ship"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ship created",
            "schema": {
              "$ref": "#/definitions/Ship"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/ships/actualizar/{id}": {
      "put": {
        "summary": "Update a ship",
        "description": "Update an existing ship by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "ship",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ship updated",
            "schema": {
              "$ref": "#/definitions/Ship"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Ship not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/ships/delete/{id}": {
      "delete": {
        "summary": "Delete a ship",
        "description": "Delete a ship by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Ship deleted"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Ship not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a user by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/crear": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with the provided data",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/actualizar/{id}": {
      "put": {
        "summary": "Update a user",
        "description": "Update an existing user by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Ship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "capacity": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}